/****************************************************************************
 * author : auto-gen-tool
 * purpose : 自动生成的代码，不要擅自修改
 * purpose : $BaseType.comment
****************************************************************************/
namespace SHGame
{
	// $BaseType.comment
	[SHMessageAttribute(SHMessageType.${BaseType.TypeName}Data)]
	public class ${BaseType.TypeName} : SHGCMessage
	{
#foreach($member in $BaseType.Members)
		// ${member.Comment}
#if (${member.IsArray})
		public ${member.TypeName}[] ${member.MemberName};
#else
		public ${member.TypeName} ${member.MemberName};
#end
#end
#if ($BaseType.Members.Count > 0)

#end
#if ($BaseType.Members.Count == 0)
		public ${BaseType.TypeName}() {}
#else
#set($i = 0)
#set($allsize = $BaseType.Members.Count - 1)
		public ${BaseType.TypeName}(
#foreach($member in $BaseType.Members)
#if ($i == $allsize)
#if (${member.IsArray})
				${member.TypeName}[] _${member.MemberName}
#else
				${member.TypeName} _${member.MemberName}
#end
#else
#if (${member.IsArray})
				${member.TypeName}[] _${member.MemberName},
#else
				${member.TypeName} _${member.MemberName},
#end
#end
			#set ($i = $i + 1)
#end
			)
		{		
#foreach($member in $BaseType.Members)
			${member.MemberName} = _${member.MemberName};
#end
		}
#end

		public override void Serialize(MLReader ar)
		{				
			base.Serialize(ar);		
#foreach($member in $BaseType.Members)
#if (${member.IsArray})

			int ${member.MemberName}Length = 0;
			ar.Serialize(ref ${member.MemberName}Length);
			${member.MemberName} = new ${member.TypeName}[${member.MemberName}Length];
			for(int i=0; i<${member.MemberName}Length; i++)
			{
#if (${member.IsBaseType})
				ar.Serialize(ref ${member.MemberName}[i]);
#else
				${member.MemberName}[i] = ar.Serialize(${member.MemberName}[i], typeof(${member.TypeName})) as ${member.TypeName};				
#end
			}
			
#else
#if (${member.IsBaseType})
			ar.Serialize(ref ${member.MemberName});
#else
			${member.MemberName} = ar.Serialize(${member.MemberName}, typeof(${member.TypeName})) as ${member.TypeName};				
#end
#end
#end
		}
	}
}